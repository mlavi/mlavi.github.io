<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>immutable on Mark&#39;s Blog</title>
    <link>https://mlavi.github.io/tags/immutable/</link>
    <description>Recent content in immutable on Mark&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Thu, 26 May 2016 12:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://mlavi.github.io/tags/immutable/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reconciling Configuration Management and Immutable Infrastructure</title>
      <link>https://mlavi.github.io/post/calm.io-recap/calm.io-reconciling_configuration_management_and_immutable_infrastructure/</link>
      <pubDate>Thu, 26 May 2016 12:00:00 -0700</pubDate>
      
      <guid>https://mlavi.github.io/post/calm.io-recap/calm.io-reconciling_configuration_management_and_immutable_infrastructure/</guid>
      <description>&lt;p&gt;This &lt;a href=&#34;../../post/calm.io-recap/&#34;&gt;Calm.io blog recap&lt;/a&gt;
 was originally written and posted by me on May 26, 2016 at
&lt;a href=&#34;http://calm.io/2016/05/26/reconciling-configuration-management-and-immutable-infrastructure/&#34;&gt;http://calm.io/2016/05/26/reconciling-configuration-management-and-immutable-infrastructure/&lt;/a&gt;,
and slightly enhanced on February 18, 2018.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Container Infrastructure Strategy</title>
      <link>https://mlavi.github.io/post/container-infrastructure-strategy/</link>
      <pubDate>Sat, 04 Apr 2015 07:55:39 -0700</pubDate>
      
      <guid>https://mlavi.github.io/post/container-infrastructure-strategy/</guid>
      <description>&lt;p&gt;In these early years of containers, &amp;ldquo;heavy containers&amp;rdquo; represent a typical approach which
resembles virtual machines, includes the operating system user land, and desires configuration
management. Does this starting point represent the opposite of container promise and the journey
to immutable infrastructure?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>